% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render.R
\name{rendering}
\alias{rendering}
\alias{pdf_render_page}
\alias{render}
\alias{pdf_convert}
\alias{poppler_config}
\title{Render / Convert PDF}
\usage{
pdf_render_page(
  pdf,
  page = 1,
  dpi = 300,
  numeric = FALSE,
  antialias = TRUE,
  opw = "",
  upw = ""
)

pdf_convert(
  pdf,
  format = "png",
  pages = NULL,
  filenames = NULL,
  dpi = 300,
  antialias = TRUE,
  opw = "",
  upw = "",
  verbose = TRUE
)

poppler_config()
}
\arguments{
\item{pdf}{file path or raw vector with pdf data}

\item{page}{which page to render}

\item{dpi}{resolution (dots per inch) to render}

\item{numeric}{convert raw output to (0-1) real values}

\item{antialias}{enable antialiasing. Must be \code{"text"} or \code{"draw"} or \code{TRUE} (both)
or \code{FALSE} (neither).}

\item{opw}{owner password}

\item{upw}{user password}

\item{format}{string with output format such as \code{"png"} or \code{"jpeg"}. Must be equal
to one of \code{poppler_config()$supported_image_formats}.}

\item{pages}{vector with one-based page numbers to render. \code{NULL} means all pages.}

\item{filenames}{vector of equal length to \code{pages} with output filenames. May also be
a format string which is expanded using \code{pages} and \code{format} respectively.}

\item{verbose}{print some progress info to stdout}
}
\description{
High quality conversion of pdf page(s) to png, jpeg or tiff format, or render into a
raw bitmap array for further processing in R.
}
\examples{
# Rendering should be supported on all platforms now
# convert pdf to png
tmpdir <- tempdir()
file <- system.file("examples", "recipes.pdf", package = "cpp11poppler")
outfiles <- paste0(tmpdir, "/apache_", 1:2, ".png")
pdf_convert(file, pages = 1:2, verbose = FALSE,
 filenames = paste0(tmpdir, "/apache_\%d.\%s"))
page1 <- pdf_render_page(file, 1)
png::writePNG(page1, paste0(tmpdir, "/page1.png"))
webp::write_webp(page1, paste0(tmpdir, "/page1.webp"))
}
\seealso{
Other cpp11poppler: 
\code{\link{cpp11poppler}}
}
\concept{cpp11poppler}
