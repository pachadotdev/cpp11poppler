[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/articles/cpp11poppler.html","id":"extracting-text","dir":"Articles","previous_headings":"","what":"Extracting Text","title":"Using cpp11poppler","text":"can extract text PDF file using pdf_text function. function returns character vector equal length number pages PDF file.","code":"library(cpp11poppler) ## Using poppler version 22.02.0 file <- system.file(\"examples\", \"recipes.pdf\", package = \"cpp11poppler\") text <- pdf_text(file) cat(text[1]) ##                            Traditional Recipes ##                                  jewishfoodsociety.org ##  ##  ##  ## Kreplach ##  ## Yield ##  ## 90 dumplings ##  ##  ## Ingredients ##  ## For the filling: ##  ##    • 6 tablespoons canola oil ##    • 1 small chicken breast (about 5 ounces; ½ cup chopped), cut into ½-inch pieces ##    • 3 chicken livers (about 3 ounces; ¼ cup chopped), cut into ½-inch pieces ##    • ½ teaspoon kosher salt, plus more to taste ##    • 3 medium onions, roughly chopped ##    • 1 egg, lightly beaten, divided ##    • ½ teaspoon freshly ground black pepper ##  ## For the dough: ##  ##    • 3½ cups all-purpose flour, sifted ##    • 1 tablespoon salt ##    • 1 egg, lightly beaten ##    • 1 cup lukewarm water ##    • Canola oil, for drizzling ##  ## For serving: ##  ##    • Chicken soup ##    • Fried onions ##  ##  ##  ##  ##                                              1"},{"path":"/articles/cpp11poppler.html","id":"extracting-metadata","dir":"Articles","previous_headings":"","what":"Extracting Metadata","title":"Using cpp11poppler","text":"can extract metadata PDF file using pdf_info function. function returns list metadata information.","code":"pdf_info(file) ## $version ## [1] \"1.5\" ##  ## $pages ## [1] 4 ##  ## $encrypted ## [1] FALSE ##  ## $linearized ## [1] FALSE ##  ## $keys ## $keys$Creator ## [1] \"LaTeX via pandoc\" ##  ## $keys$Title ## [1] \"Traditional Recipes\" ##  ## $keys$Author ## [1] \"jewishfoodsociety.org\" ##  ## $keys$Producer ## [1] \"xdvipdfmx (20240407)\" ##  ##  ## $created ## [1] 1733797917 ##  ## $modified ## [1] -1 ##  ## $metadata ## integer(0) ##  ## $locked ## [1] FALSE ##  ## $attachments ## [1] FALSE ##  ## $layout ## [1] \"no_layout\""},{"path":"/articles/cpp11poppler.html","id":"extracting-fonts","dir":"Articles","previous_headings":"Extracting Metadata","what":"Extracting Fonts","title":"Using cpp11poppler","text":"can extract font information PDF file using pdf_fonts function. function returns data frame font information.","code":"pdf_fonts(file) ##                                  name       type embedded file ## 1     CONQID+LMSans10-Bold-Identity-H cid_type0c     TRUE      ## 2 LUAZIR+LMRoman12-Regular-Identity-H cid_type0c     TRUE      ## 3 CTWPJX+LMRoman10-Regular-Identity-H cid_type0c     TRUE      ## 4    PXMFVJ+LMRoman10-Bold-Identity-H cid_type0c     TRUE"},{"path":"/articles/cpp11poppler.html","id":"extracting-attachments","dir":"Articles","previous_headings":"","what":"Extracting Attachments","title":"Using cpp11poppler","text":"can extract attachments PDF file using pdf_attachments function. function returns list attachment information.","code":"pdf_attachments(file) ## list()"},{"path":"/articles/cpp11poppler.html","id":"rendering-pages","dir":"Articles","previous_headings":"","what":"Rendering Pages","title":"Using cpp11poppler","text":"can render PDF page bitmap array using pdf_render_page function. function returns bitmap array can processed R.","code":"page1 <- pdf_render_page(file, page = 1, dpi = 300) png::writePNG(page1, \"page1.png\")"},{"path":"/articles/cpp11poppler.html","id":"converting-pages-to-images","dir":"Articles","previous_headings":"Rendering Pages","what":"Converting Pages to Images","title":"Using cpp11poppler","text":"can convert PDF pages images using pdf_convert function. function saves rendered pages image files.","code":"pdf_convert(file, format = \"png\", pages = 1:2, dpi = 300, verbose = FALSE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauricio Vargas Sepulveda. Author, maintainer. Jeroen Ooms. Author.            Author pdftools R package Kristian Hogsberg. Copyright holder.           Author poppler Munk School Global Affairs Public Policy. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vargas Sepulveda M, Ooms J (2024). cpp11poppler: Text Extraction, Rendering Converting PDF Documents. R package version 3.4.2, https://pacha.dev/cpp11poppler/.","code":"@Manual{,   title = {cpp11poppler: Text Extraction, Rendering and Converting of PDF Documents},   author = {Mauricio {Vargas Sepulveda} and Jeroen Ooms},   year = {2024},   note = {R package version 3.4.2},   url = {https://pacha.dev/cpp11poppler/}, }"},{"path":[]},{"path":"/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Text Extraction, Rendering and Converting of PDF Documents","text":"cpp11poppler package provides set functions extracting text, fonts, attachments metadata PDF file. fork pdftools uses cpp11 require licensing security purposes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Text Extraction, Rendering and Converting of PDF Documents","text":"can install development version cpp11poppler like :","code":"remotes::install_github(\"pachadotdev/cpp11poppler\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Text Extraction, Rendering and Converting of PDF Documents","text":"See vignette examples.","code":"library(cpp11poppler) #> Using poppler version 22.02.0 tmpdir <- tempdir() file <- system.file(\"examples\", \"recipes.pdf\", package = \"cpp11poppler\") pdf_convert(file, pages = 1L, filenames = file.path(tmpdir, \"recipes%02d.%s\")) #> Converting page 1 to /tmp/Rtmp7OsuJM/recipes01.png... #> done. #> [1] \"/tmp/Rtmp7OsuJM/recipes01.png\""},{"path":"/reference/cpp11poppler-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Source OCR Engine — cpp11poppler-package","title":"Open Source OCR Engine — cpp11poppler-package","text":"Bindings 'libpoppler': tool extracting text, fonts, attachments metadata PDF file. Also supports high quality rendering PDF documents PNG, JPEG, TIFF format, raw bitmap vectors posterior processing.","code":""},{"path":[]},{"path":"/reference/cpp11poppler-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open Source OCR Engine — cpp11poppler-package","text":"Maintainer: Mauricio Vargas Sepulveda m.sepulveda@mail.utoronto.ca (ORCID) Authors: Jeroen Ooms jeroen@berkeley.edu (ORCID) (Author pdftools R package) contributors: Kristian Hogsberg (Author poppler) [copyright holder] Munk School Global Affairs Public Policy [funder]","code":""},{"path":"/reference/cpp11poppler.html","id":null,"dir":"Reference","previous_headings":"","what":"PDF utilities — cpp11poppler","title":"PDF utilities — cpp11poppler","text":"Utilities based libpoppler extracting text, fonts, attachments metadata pdf file.","code":""},{"path":"/reference/cpp11poppler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PDF utilities — cpp11poppler","text":"","code":"pdf_info(pdf, opw = \"\", upw = \"\")  pdf_text(pdf, opw = \"\", upw = \"\")  pdf_data(pdf, font_info = FALSE, opw = \"\", upw = \"\")  pdf_fonts(pdf, opw = \"\", upw = \"\")  pdf_attachments(pdf, opw = \"\", upw = \"\")  pdf_toc(pdf, opw = \"\", upw = \"\")  pdf_pagesize(pdf, opw = \"\", upw = \"\")"},{"path":"/reference/cpp11poppler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PDF utilities — cpp11poppler","text":"pdf file path raw vector pdf data opw string owner password open pdf upw string user password open pdf font_info TRUE, extract font-data box. careful, requires recent version poppler error otherwise.","code":""},{"path":"/reference/cpp11poppler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PDF utilities — cpp11poppler","text":"pdf_text function renders textboxes text canvas returns character vector equal length number pages PDF file. hand, pdf_data low level returns one data frame per page, containing one row textbox PDF. Note pdf_data requires recent version libpoppler might available Linux systems. using pdf_data R packages, condition use poppler_config()$has_pdf_data shows function can used current system. Ubuntu 16.04 (Xenial) 18.04 (Bionic) can use PPA backports Poppler 0.74.0. Poppler pretty verbose encountering minor errors PDF files, especially pdf_text. messages usually safe ignore, use suppressMessages hide altogether.","code":""},{"path":[]},{"path":"/reference/cpp11poppler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PDF utilities — cpp11poppler","text":"","code":"# Just a random pdf file file <- system.file(\"examples\", \"recipes.pdf\", package = \"cpp11poppler\") info <- pdf_info(file) text <- pdf_text(file) fonts <- pdf_fonts(file) files <- pdf_attachments(file)"},{"path":"/reference/pdf_render_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Render / Convert PDF — rendering","title":"Render / Convert PDF — rendering","text":"High quality conversion pdf page(s) png, jpeg tiff format, render raw bitmap array processing R.","code":""},{"path":"/reference/pdf_render_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render / Convert PDF — rendering","text":"","code":"pdf_render_page(   pdf,   page = 1,   dpi = 300,   numeric = FALSE,   antialias = TRUE,   opw = \"\",   upw = \"\" )  pdf_convert(   pdf,   format = \"png\",   pages = NULL,   filenames = NULL,   dpi = 300,   antialias = TRUE,   opw = \"\",   upw = \"\",   verbose = TRUE )  poppler_config()"},{"path":"/reference/pdf_render_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render / Convert PDF — rendering","text":"pdf file path raw vector pdf data page page render dpi resolution (dots per inch) render numeric convert raw output (0-1) real values antialias enable antialiasing. Must \"text\" \"draw\" TRUE () FALSE (neither). opw owner password upw user password format string output format \"png\" \"jpeg\". Must equal one poppler_config()$supported_image_formats. pages vector one-based page numbers render. NULL means pages. filenames vector equal length pages output filenames. May also format string expanded using pages format respectively. verbose print progress info stdout","code":""},{"path":[]},{"path":"/reference/pdf_render_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render / Convert PDF — rendering","text":"","code":"# Rendering should be supported on all platforms now # convert pdf to png tmpdir <- tempdir() file <- system.file(\"examples\", \"recipes.pdf\", package = \"cpp11poppler\") outfiles <- paste0(tmpdir, \"/apache_\", 1:2, \".png\") pdf_convert(file, pages = 1:2, verbose = FALSE,  filenames = paste0(tmpdir, \"/apache_%d.%s\")) #> [1] \"/tmp/Rtmp3Dyjr2/apache_1.png\" \"/tmp/Rtmp3Dyjr2/apache_2.png\" page1 <- pdf_render_page(file, 1) png::writePNG(page1, paste0(tmpdir, \"/page1.png\")) webp::write_webp(page1, paste0(tmpdir, \"/page1.webp\"))"}]
